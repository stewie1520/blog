basePath: /
definitions:
  api.LivenessResponse:
    properties:
      healthy:
        type: boolean
    type: object
  api.ReadinessResponse:
    properties:
      database:
        description: won't be shown if empty
        type: string
      healthy:
        type: boolean
    type: object
  user.RegisterCommand:
    properties:
      bio:
        type: string
      email:
        type: string
      fullName:
        type: string
      password:
        type: string
    type: object
  user.RegisterResponse:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
info:
  contact: {}
  title: Blog API
  version: "1.0"
paths:
  /health/live:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.LivenessResponse'
      summary: Check if application is live
      tags:
      - health
  /health/ready:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.ReadinessResponse'
      summary: Check if application is ready to serve traffic
      tags:
      - health
  /user/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: Register payload
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.RegisterCommand'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.RegisterResponse'
      summary: Register new user
      tags:
      - user
swagger: "2.0"
